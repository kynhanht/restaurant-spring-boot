<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd"
version="1.0">
	<named-native-query name="get.LocationTable">
		<query><![CDATA[
		SELECT lt.location_table_id AS locationId, lt.location_name as locationName, s1.status_value AS locationStatus, 
		t.table_code as tableCode, t.table_name as tableName, t.`max_capacity` as maxCapacity, s2.status_value AS tableStatus
		FROM location_table lt 
		INNER JOIN tables t ON t.location_id = lt.location_table_id
		INNER JOIN statuses s1 ON lt.status_id = s1.status_id
		INNER JOIN statuses s2 ON t.status_id = s2.status_id
		]]></query>
	</named-native-query>
	
	
	<named-native-query name="insert.Order">
		<query><![CDATA[
		INSERT INTO orders (order_taker_id, table_id, status_id,
			order_code, create_by)
			VALUES(:order_taker_id, :table_id, :status_id, :order_code, :create_by)
		]]></query>
	</named-native-query>
	
	<named-native-query name="select.GetByDish">
		<query><![CDATA[
		SELECT d.dish_id AS dishId, 'ABC' AS dishName, 0 AS TotalQuantity, 0 AS quantityOrderDish, od.order_dish_id AS orderDishId, 
			s1.status_value AS statusOrderDish, o.order_id AS orderId, t.table_name AS tableName, s2.status_value AS statusOrder, o.order_date AS orderDate, o.order_code AS orderCode,
		    op.option_name AS optionName, odo.quantity AS quantityOrderDishOption
		FROM order_dish od 
			INNER JOIN dishes d ON d.dish_id = od.dish_id
			INNER JOIN orders o ON od.order_id = o.order_id
		    LEFT JOIN order_dish_option odo ON odo.order_dish_id = od.order_dish_id
		    LEFT JOIN options op ON odo.option_id = op.option_id
			INNER JOIN tables t ON t.table_id = o.table_id
			INNER JOIN statuses s1 ON od.status_id = s1.status_id
			INNER JOIN statuses s2 ON o.status_id = s2.status_id
		WHERE od.status_id IN (18,20) AND o.status_id IN (11,13) AND op.option_name <> ''
		UNION ALL
		SELECT d1.dish_id AS dishId, 'ABC' AS dishName, 0 AS TotalQuantity, od1.quantity AS quantityOrderDish, od1.order_dish_id AS orderDishId, 
			s3.status_value AS statusOrderDish, o1.order_id AS orderId, t1.table_name AS tableName, s4.status_value AS statusOrder, o1.order_date AS orderDate, o1.order_code AS orderCode, 
		    'ABC' AS optionName, 0 AS quantityOrderDishOption
		FROM order_dish od1 
			INNER JOIN dishes d1 ON d1.dish_id = od1.dish_id
			INNER JOIN orders o1 ON od1.order_id = o1.order_id
			INNER JOIN tables t1 ON t1.table_id = o1.table_id
			INNER JOIN statuses s3 ON od1.status_id = s3.status_id
			INNER JOIN statuses s4 ON o1.status_id = s4.status_id
		WHERE od1.status_id IN (18,20) AND o1.status_id IN (11,13)
		-- ORDER BY d.dish_id, od.order_dish_id, o.order_date ASC;
		UNION ALL
		SELECT  t2.dish_id AS dishId, t2.dish_name AS dishName, SUM(t1.quantity) AS TotalQuantity, 
			0 AS quantityOrderDish, 0 AS orderDishId, 'ABC' AS statusOrderDish, 0 AS orderId, 'ABC' AS tableName, 'ABC' AS statusOrder, '2000-01-01 00:00:00' AS orderDate, 'ABC' AS orderCode, 
			'ABC' AS optionName, 0 AS quantityOrderDishOption
		FROM order_dish AS t1
			INNER JOIN dishes AS t2 ON t1.dish_id = t2.dish_id
			INNER JOIN orders AS t3 ON t1.order_id = t3.order_id
		GROUP BY t1.dish_id
		]]></query>
	</named-native-query>
	
	<named-native-query name="select.QuantifierMaterial">
		<query><![CDATA[
			SELECT q.dish_id AS dishId, q.material_id AS materialId, q.quantity AS quantifier, m.unit_price AS unitPrice FROM quantifier q 
			INNER JOIN materials m ON q.material_id = m.material_id WHERE q.dish_id = :dishId
		]]></query>
	</named-native-query>
	
</entity-mappings>